{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_TOKEN = \"SET_TOKEN\";\nconst SET_ERROR = \"SET_ERROR\";\nconst SET_STRUCTURED_ERROR = \"SET_STRUCTURED_ERROR\";\nconst SET_USER = \"SET_USER\";\nexport let initialState = {\n  token: null,\n  errors: [],\n  structureErrors: [],\n  user: {\n    uuid: null,\n    dt_create: null,\n    dt_update: null,\n    mail: null,\n    fio: null,\n    role: null,\n    status: null\n  }\n};\nconst authReduser = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let state_copy;\n  switch (action.type) {\n    case SET_TOKEN:\n      state_copy = {\n        ...state,\n        token: action.token\n      };\n      return state_copy;\n    case SET_ERROR:\n      state_copy = {\n        ...state,\n        errors: action.errors\n      };\n      return state_copy;\n    case SET_STRUCTURED_ERROR:\n      state_copy = {\n        ...state,\n        structureErrors: action.errors\n      };\n      return state_copy;\n    case SET_USER:\n      state_copy = {\n        ...state,\n        user: action.user\n      };\n      return state_copy;\n    default:\n      return state;\n  }\n};\nexport const setToken = token => ({\n  type: SET_TOKEN,\n  token: token\n});\nexport const setError = errors => ({\n  type: SET_ERROR,\n  errors: errors\n});\nexport const setStructuredError = errors => ({\n  type: SET_STRUCTURED_ERROR,\n  errors: errors\n});\nexport const setUserInfo = user => ({\n  type: SET_USER,\n  user: user\n});\nexport const getInfoAboutMe = token => dispatch => {\n  authAPI.me(token).then(response => {\n    dispatch(setUserInfo(response.data));\n  });\n};\nexport const loginThunk = (mail, password) => dispatch => {\n  authAPI.login(mail, password).then(response => {\n    console.log(response);\n    dispatch(setToken(response.data));\n    dispatch(getInfoAboutMe(response.data));\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport default authReduser;","map":{"version":3,"names":["authAPI","SET_TOKEN","SET_ERROR","SET_STRUCTURED_ERROR","SET_USER","initialState","token","errors","structureErrors","user","uuid","dt_create","dt_update","mail","fio","role","status","authReduser","state","arguments","length","undefined","action","state_copy","type","setToken","setError","setStructuredError","setUserInfo","getInfoAboutMe","dispatch","me","then","response","data","loginThunk","password","login","console","log","catch","error"],"sources":["/Users/tatdzi/Desktop/it/projects/EasyTaskerServer/web-client/src/redux/AuthReduser.js"],"sourcesContent":["import {authAPI} from \"../api/api\";\n\nconst SET_TOKEN =\"SET_TOKEN\"\nconst SET_ERROR=\"SET_ERROR\"\nconst SET_STRUCTURED_ERROR=\"SET_STRUCTURED_ERROR\"\nconst SET_USER=\"SET_USER\"\n\nexport let initialState = {\n    token: null,\n    errors:[],\n    structureErrors:[],\n    user:{\n        uuid: null,\n        dt_create: null,\n        dt_update: null,\n        mail: null,\n        fio: null,\n        role: null,\n        status: null\n    }\n}\nconst authReduser = (state=initialState,action) => {\n    let state_copy\n    switch (action.type) {\n        case SET_TOKEN:\n            state_copy = {\n                ...state,\n                token: action.token,\n            }\n            return state_copy;\n        case SET_ERROR:\n            state_copy = {\n                ...state,\n                errors: action.errors,\n            }\n            return state_copy;\n        case SET_STRUCTURED_ERROR:\n            state_copy = {\n                ...state,\n                structureErrors: action.errors,\n            }\n            return state_copy;\n        case SET_USER:\n            state_copy = {\n                ...state,\n                user: action.user,\n            }\n            return state_copy;\n        default:\n            return state;\n    }\n}\n\nexport const setToken=(token)=>\n    ({type:SET_TOKEN,token:token})\n\nexport const setError=(errors)=>\n    ({type:SET_ERROR,errors:errors})\nexport const setStructuredError=(errors)=>\n    ({type:SET_STRUCTURED_ERROR,errors:errors})\nexport const setUserInfo=(user)=>\n    ({type:SET_USER,user:user})\n\nexport const getInfoAboutMe = (token)=>(dispatch)=>{\n    authAPI.me(token).then(response =>{\n        dispatch(setUserInfo(response.data))\n    })\n}\n\nexport const loginThunk = (mail,password )=>(dispatch) =>{\n    authAPI.login(mail,password)\n        .then(response =>{\n            console.log(response);\n            dispatch(setToken(response.data))\n            dispatch(getInfoAboutMe(response.data))\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n\n\nexport default authReduser"],"mappings":"AAAA,SAAQA,OAAO,QAAO,YAAY;AAElC,MAAMC,SAAS,GAAE,WAAW;AAC5B,MAAMC,SAAS,GAAC,WAAW;AAC3B,MAAMC,oBAAoB,GAAC,sBAAsB;AACjD,MAAMC,QAAQ,GAAC,UAAU;AAEzB,OAAO,IAAIC,YAAY,GAAG;EACtBC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAC,EAAE;EACTC,eAAe,EAAC,EAAE;EAClBC,IAAI,EAAC;IACDC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,IAAI;IACfC,SAAS,EAAE,IAAI;IACfC,IAAI,EAAE,IAAI;IACVC,GAAG,EAAE,IAAI;IACTC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE;EACZ;AACJ,CAAC;AACD,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACd,YAAY;EAAA,IAACiB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1C,IAAIE,UAAU;EACd,QAAQD,MAAM,CAACE,IAAI;IACf,KAAKvB,SAAS;MACVsB,UAAU,GAAG;QACT,GAAGL,KAAK;QACRZ,KAAK,EAAEgB,MAAM,CAAChB;MAClB,CAAC;MACD,OAAOiB,UAAU;IACrB,KAAKrB,SAAS;MACVqB,UAAU,GAAG;QACT,GAAGL,KAAK;QACRX,MAAM,EAAEe,MAAM,CAACf;MACnB,CAAC;MACD,OAAOgB,UAAU;IACrB,KAAKpB,oBAAoB;MACrBoB,UAAU,GAAG;QACT,GAAGL,KAAK;QACRV,eAAe,EAAEc,MAAM,CAACf;MAC5B,CAAC;MACD,OAAOgB,UAAU;IACrB,KAAKnB,QAAQ;MACTmB,UAAU,GAAG;QACT,GAAGL,KAAK;QACRT,IAAI,EAAEa,MAAM,CAACb;MACjB,CAAC;MACD,OAAOc,UAAU;IACrB;MACI,OAAOL,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAEnB,KAAK,KACvB;EAACkB,IAAI,EAACvB,SAAS;EAACK,KAAK,EAACA;AAAK,CAAC,CAAC;AAElC,OAAO,MAAMoB,QAAQ,GAAEnB,MAAM,KACxB;EAACiB,IAAI,EAACtB,SAAS;EAACK,MAAM,EAACA;AAAM,CAAC,CAAC;AACpC,OAAO,MAAMoB,kBAAkB,GAAEpB,MAAM,KAClC;EAACiB,IAAI,EAACrB,oBAAoB;EAACI,MAAM,EAACA;AAAM,CAAC,CAAC;AAC/C,OAAO,MAAMqB,WAAW,GAAEnB,IAAI,KACzB;EAACe,IAAI,EAACpB,QAAQ;EAACK,IAAI,EAACA;AAAI,CAAC,CAAC;AAE/B,OAAO,MAAMoB,cAAc,GAAIvB,KAAK,IAAIwB,QAAQ,IAAG;EAC/C9B,OAAO,CAAC+B,EAAE,CAACzB,KAAK,CAAC,CAAC0B,IAAI,CAACC,QAAQ,IAAG;IAC9BH,QAAQ,CAACF,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC;EACxC,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAACtB,IAAI,EAACuB,QAAQ,KAAKN,QAAQ,IAAI;EACrD9B,OAAO,CAACqC,KAAK,CAACxB,IAAI,EAACuB,QAAQ,CAAC,CACvBJ,IAAI,CAACC,QAAQ,IAAG;IACbK,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrBH,QAAQ,CAACL,QAAQ,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC;IACjCJ,QAAQ,CAACD,cAAc,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC3C,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAE;IACVH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACtB,CAAC,CAAC;AACV,CAAC;AAGD,eAAexB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}